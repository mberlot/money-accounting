{"version":3,"sources":["../../api/account/controller.js"],"names":["Account","require","account","getCurrentAccountBalance","req","res","accountInfo","getAccountInfo","status","json","success","isPositive","next","body","amount","message","send","newTransaction","type","e","sendStatus","exports","init","app","get","post"],"mappings":";;AAAA,MAAMA,UAAUC,QAAQ,WAAR,CAAhB;;AAEA,MAAMC,UAAU,IAAIF,OAAJ,EAAhB;;AAGA,MAAMG,2BAA2B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjD,UAAMC,cAAc,MAAMJ,QAAQK,cAAR,EAA1B;AACA,WAAOF,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBJ,WAAjB,EAArB,CAAP;AACH,CAHD;AAIA,SAASK,UAAT,CAAoBP,GAApB,EAAyBC,GAAzB,EAA8BO,IAA9B,EAAoC;AAChC,QAAIR,IAAIS,IAAJ,CAASC,MAAT,IAAmBV,IAAIS,IAAJ,CAASC,MAAT,GAAkB,CAAzC,EAA4C;AACxCF;AACH,KAFD,MAEO;AACH,YAAIG,UAAU,sBAAd;AACA,YAAIX,IAAIS,IAAJ,CAASC,MAAT,IAAmBV,IAAIS,IAAJ,CAASC,MAAT,IAAmB,CAA1C,EAA6C;AACzCC,sBAAU,iCAAV;AACH;AACDV,YAAIG,MAAJ,CAAW,GAAX,EAAgBQ,IAAhB,CAAqB,EAAED,OAAF,EAArB;AACH;AACJ;;AAED,MAAME,iBAAiB,CAACb,GAAD,EAAMC,GAAN,KAAc;AACjC,UAAMS,SAASV,IAAIS,IAAJ,CAAS,QAAT,CAAf;AACA,UAAMK,OAAOd,IAAIS,IAAJ,CAAS,MAAT,CAAb;AACA,QAAI,CAACC,MAAD,IAAW,CAACI,IAAhB,EAAsB;AAClBb,YAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEM,SAAU,oBAAZ,EAArB;AACA;AACH,KAHD,MAIK;AACD,YAAI;AACAb,oBAAQe,cAAR,CAAuBH,MAAvB,EAA+BI,IAA/B;AACAb,gBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAArB;AACH,SAHD,CAIA,OAAOS,CAAP,EAAU;AACNd,gBAAIe,UAAJ,CAAe,GAAf;AACH;AACJ;AACJ,CAhBD;;AAkBAC,QAAQC,IAAR,GAAgBC,GAAD,IAAS;AACpBA,QAAIC,GAAJ,CAAQ,iBAAR,EAA2BrB,wBAA3B;AACAoB,QAAIE,IAAJ,CAAS,iBAAT,EAA4Bd,UAA5B,EAAwCM,cAAxC,EAFoB,CAEqC;AAC5D,CAHD","file":"controller.js","sourcesContent":["const Account = require('./account');\n\nconst account = new Account();\n\n\nconst getCurrentAccountBalance = async (req, res) => {\n    const accountInfo = await account.getAccountInfo();\n    return res.status(200).json({ success: true, accountInfo });\n}\nfunction isPositive(req, res, next) {\n    if (req.body.amount && req.body.amount > 0) {\n        next();\n    } else {\n        let message = 'amount param missing'\n        if (req.body.amount && req.body.amount <= 0) {\n            message = 'amount param should be positive';\n        }\n        res.status(400).send({ message });\n    }\n}\n\nconst newTransaction = (req, res) => {\n    const amount = req.body['amount'];\n    const type = req.body['type'];\n    if (!amount || !type) {\n        res.status(400).json({ message: `type param missing` });\n        return;\n    }\n    else {\n        try {\n            account.newTransaction(amount, type);\n            res.status(200).json({ success: true });\n        }\n        catch (e) {\n            res.sendStatus(500);\n        }\n    }\n}\n\nexports.init = (app) => {\n    app.get('/currentBalance', getCurrentAccountBalance);\n    app.post('/newTransaction', isPositive, newTransaction); //applying middleware to be sure amount is possitive\n};\n"]}