{"version":3,"sources":["../../api/account/accountRepository.js"],"names":["redisInstance","require","accountRepository","prototype","getAccountInfo","money","get","transactions","zrevrange","currentMoney","newTransaction","amount","type","operation","newValue","parseInt","set","effectiveDate","Date","count","zcard","zadd","JSON","stringify","module","exports"],"mappings":";;AACA,MAAMA,gBAAgBC,QAAQ,wBAAR,CAAtB;;AAEA,SAASC,iBAAT,GAA6B,CAE5B;;AAEDA,kBAAkBC,SAAlB,CAA4BC,cAA5B,GAA6C,YAAY;AACrD,UAAMC,QAAQ,MAAML,cAAcM,GAAd,CAAkB,cAAlB,CAApB;AACA,UAAMC,eAAe,MAAMP,cAAcQ,SAAd,CAAwB,cAAxB,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAA3B;AACA,WAAO;AACHC,sBAAeJ,KAAD,GAAUA,KAAV,GAAkB,CAD7B;AAEHE;AAFG,KAAP;AAIH,CAPD;;AASAL,kBAAkBC,SAAlB,CAA4BO,cAA5B,GAA6C,OAAOC,MAAP,EAAeC,IAAf,EAAqBC,SAArB,KAAmC;AAC5E,UAAMR,QAAQ,MAAML,cAAcM,GAAd,CAAkB,cAAlB,CAApB;AACA,UAAMQ,WAAWD,UAAUE,SAAUV,KAAD,GAAUA,KAAV,GAAkB,CAA3B,CAAV,EAAyCU,SAASJ,MAAT,CAAzC,CAAjB;AACAX,kBAAcgB,GAAd,CAAkB,cAAlB,EAAkCF,QAAlC;AACA,UAAMJ,iBAAiB;AACnBE,YADmB;AAEnBD,cAFmB;AAGnBM,uBAAe,IAAIC,IAAJ;AAHI,KAAvB;AAKA,UAAMC,QAAQ,MAAMnB,cAAcoB,KAAd,CAAoB,cAApB,CAApB;AACApB,kBAAcqB,IAAd,CAAmB,cAAnB,EAAmCF,QAAQ,CAA3C,EAA8CG,KAAKC,SAAL,CAAeb,cAAf,CAA9C;AAEH,CAZD;;AAcAc,OAAOC,OAAP,GAAiBvB,iBAAjB","file":"accountRepository.js","sourcesContent":["\nconst redisInstance = require('../config/redis-config');\n\nfunction accountRepository() {\n\n}\n\naccountRepository.prototype.getAccountInfo = async () => {\n    const money = await redisInstance.get(\"currentMoney\");\n    const transactions = await redisInstance.zrevrange('transactions', 0, -1);\n    return {\n        currentMoney: (money) ? money : 0,\n        transactions\n    };\n}\n\naccountRepository.prototype.newTransaction = async (amount, type, operation) => {\n    const money = await redisInstance.get(\"currentMoney\");\n    const newValue = operation(parseInt((money) ? money : 0), parseInt(amount));\n    redisInstance.set(\"currentMoney\", newValue);\n    const newTransaction = {\n        type,\n        amount,\n        effectiveDate: new Date()\n    };\n    const count = await redisInstance.zcard('transactions');\n    redisInstance.zadd('transactions', count + 1, JSON.stringify(newTransaction));\n\n}\n\nmodule.exports = accountRepository;\n"]}